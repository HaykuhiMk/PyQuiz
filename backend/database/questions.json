[
    {
        "id": 0,
        "question": "What will be the output of the following code?",
        "code": "ls = [1, 2, 3]\nls[0] = 'hello'\nls[4] = 4\nprint(ls)",
        "options": [
        "['hello', 2, 3, 4]",
        "['hello', 2, 3, 0, 4]",
        "'list' object does not support item assignment.",
        "list assignment index out of range.",
        "'=' not supported between instances of 'int' and 'str'."
        ],
        "answer": "list assignment index out of range."
    },
    {
        "id": 1,
        "question": "What will be the output of the following code?",
        "code": "tp = ('hello', 1, 2, 3, 'spam')\ntp[0] = 0\ntp[4] = 4\nprint(tp)",
        "options": [
          "0, 1, 2, 3, 4",
          "'tuple' object does not support item assignment.",
          "Tuple assignment index out of range.",
          "'=' not supported between instances of 'str' and 'int'.",
          "Nothing"
        ],
        "answer": "'tuple' object does not support item assignment."
    },
    {
        "id": 2,
        "question": "What will be the output of the following code?",
        "code": "words = ['Python', 'Java', 'C++']\nfor word in words:\n\tprint(word[0])",
        "options": [
            "Python Python Python",
            "P J C",
            "Error",
            "Nothing"
        ],
        "answer": "P J C"
    },
    {
        "id": 3,
        "question": "What will be the output of the following code?",
        "code": "for x in 'spam':\n\tprint(x)",
        "options": [
            "NameError: name 'x' is not defined.",
            "true true true true",
            "spam spam spam spam",
            "s p a m",
            "s sp spa spam",
            "The result will be an endless print of 'spam'.",
            "Nothing"
        ],
        "answer": "s p a m"
    },
    {
        "id": 4,
        "question": "What will be the output of the following code?",
        "code": "x = 10\nif x > '5':\n\tprint('x is greater than 5')\nelse:\n\tprint('x is less than or equal to 5')",
        "options": [
            "Nothing",
            "x is less than or equal to 5",
            "Type error",
            "x is greater than 5"
        ],
        "answer": "Type error"
    },
    {
        "id": 5,
        "question": "What will be the output of the following code?",
        "code": "str1 = 'hello'\nstr2 = 'World'\nstr2 += '!'\nstr3 = 'H' + str1[1:]\nstr1 = str3 + ' ' + str2\nstr1[len(str1)] = '.'\nprint(str1)",
        "options": [
            "Hello World!",
            "Hello World.",
            "'str' object does not support item assignment",
            "unsupported operand type(s) for +: 'str' and 'str'",
            "Nothing"
        ],
        "answer": "'str' object does not support item assignment"
    },
    {
        "id": 6,
        "question": "What will be the output of the following code?",
        "code": "for i in range(1, 7):\n\tif i == 3:\n\t\tcontinue\n\tprint(i, ' ')\n\tif (i == 5):\n\t\tbreak",
        "options": [
            "1 2 4",
            "1 2 4 5",
            "1 2",
            "1 2 3 4 5",
            "Error",
            "Nothing"
        ],
        "answer": "1 2 4 5"
    },
    {
        "id": 7,
        "question": "What will be the output of the following code?",
        "code": "ls = [7, 1, 4, 1, 3, 3, 3, 5]\ns = set(ls)\nprint(s)",
        "options": [
            "Error",
            "1, 2, 3, 1, 3, 3, 4, 5",
            "1, 2, 3, 4, 5",
            "\"12313345\""
        ],
        "answer": "1, 2, 3, 4, 5"
    },
    {
        "id": 8,
        "question": "What will be the output of the following code?",
        "code": "x = 17\ny = 20\nstr1 = str(x) + str(y)\nstr2 = str(x + y)\nstr3 = str(x + True)\nprint(str1, ' ',str2, ' ', str3)",
        "options": [
            "37 37 True",
            "37 1720 True",
            "1720 37 18",
            "1720 1720 True",
            "unsupported operand type(s) for +: 'str' and 'str'",
            "unsupported operand type(s) for +: 'str' and 'bool'",
            "unsupported operand type(s) for +: 'int' and 'bool'",
            "Nothing"
        ],
        "answer": "1720  37  18"
    },
    {
        "id": 9,
        "question": "What will be the output of the following code?",
        "code": "l1 = [1, 2, 3]\nl2 = l1\nl2[0] = 5\nprint(l1, l2)",
        "options": [
            "[1, 2, 3] [5, 2, 3]",
            "[1, 2, 3] [1, 2, 3]",
            "[5, 2, 3] [5, 2, 3]",
            "'list' object does not support item assignment.",
            "Nothing"
        ],
        "answer": "[5, 2, 3] [5, 2, 3]"
    },
    {
        "id": 10,
        "question": "What will be the output of the following code?",
        "code": "import sys\nl1 = [1, 2, 3]\nl2 = l1\nl3 = [1, 2, 3]\nprint(sys.getrefcount(l3), sys.getrefcount(l1))\nprint(l1 == l2, l1 == l3, l1 is l2, l1 is l3)\nx = 42\ny = 42\nprint(x == y, x is y)",
        "options": [
            "3 3 True True True False True True",
            "2 3 True False True False True False",
            "2 3 True True True False True True",
            "2 3 True True True True True True",
            "3 3 True True True True True True",
            "3 3 True False True False True False",
            "Nothing",
            "Error"
        ],
        "answer": "2 3 True True True False True True"
    },
    {
        "id": 11,
        "question": "What will be the output of the following code?",
        "code": "l1 = [1, [8, 7, 6], 3, 4, 5]\nprint(len(l1))",
        "options": [
            "7",
            "6",
            "5",
            "28",
            "Nothing",
            "Error"
        ],
        "answer": "5"
    },
    {
        "id": 12,
        "question": "What will be the output of the following code?",
        "code": "list = [10, 20, 30, 40, 50]\nfor i in list:\n\tif not (i == 30):\n\t\tprint(i, end=' ')\n\tif i > 40:\n\t\tbreak",
        "options": [
            "30",
            "10 20 40",
            "10 20 40 50",
            "10 20 30 40",
            "10 20 30 40 50",
            "Nothing",
            "Error"
        ],
        "answer": "10 20 40 50"
    },
    {
        "id": 13,
        "question": "What will be the output of the following code?",
        "code": "lst = [7, 8, 9, 10, 11]\nfor i in lst:\n\tif i % 3 == 0:\n\t\tcontinue\n\telif i == 10:\n\t\tbreak\n\telse:\n\t\tprint(i, end=' ')",
        "options": [
            "7 8",
            "7 8 9",
            "7 8 11",
            "7 8 9 10",
            "7 8 10 11",
            "Nothing",
            "Error"
        ],
        "answer": "7 8"
    },
    {
        "id": 14,
        "question": "What will be the output of the following code?",
        "code": "for i in range(1, 6):\n\tsquare = i ** 2\n\tprint(square)\n\tif square == 9:\n\t\tbreak",
        "options": [
            "1 4 9",
            "1 2 3 4 5",
            "1 2 3 4 5 6",
            "1 4 9 16 25",
            "1 4 9 16 25 36",
            "Nothing",
            "Error"
        ],
        "answer": "1 4 9"
    },
    {
        "id": 15,
        "question": "What will be the output of the following code?",
        "code": "list = [1]\nlist1 = list \nlist1 = list1 * 5 \nprint(list, list1)",
        "options": [
            "5 5",
            "1 5",
            "[1] [1, 1, 1, 1, 1]",
            "[1, 1, 1, 1, 1] [1, 1, 1, 1, 1]",
            "'*' not supported between instances of 'str' and 'int'.",
            "Nothing"
        ],
        "answer": "[1] [1, 1, 1, 1, 1]"
    },
    {
        "id": 16,
        "question": "What will be the output of the following code?",
        "code": "list = [1, 2, 3, 4, 5]\nlist1 = list\nlist[1:4] = [6, 7, 8]\nlist1[1:3] = []\nprint(list, list1)",
        "options": [
            "[1, 8, 5] [1, 8, 5]",
            "[1, 6, 7, 8, 5] [1, 4, 5]",
            "[1, 6, 7, 8, 5] [1, 6, 7, 8, 5]",
            "[1, 2, 3, 4, 5] [1, 2, 3, 4, 5]",
            "Nothing",
            "Error"
        ],
        "answer": "[1, 8, 5] [1, 8, 5]"
    },
    {
        "id": 17,
        "question": "What will be the output of the following code?",
        "code": "di = dict(a=1, b=2, c=3)\ndiKeys = di.keys()\nprint(diKeys[0])",
        "options": [
            "1",
            "a",
            "{a : 1}",
            "(1, 2, 3)",
            "(a, b, c)",
            "'dict_keys' object does not support indexing.",
            "'tuple' object does not support item assignment",
            "Nothing"
        ],
        "answer": "'dict_keys' object does not support indexing."
    },
    {
        "id": 18,
        "question": "What will be the output of the following code?",
        "code": "var = str.maketrans('be', 'do')\nprint(type(var), end=' | ')\ntext = 'be good'\ntranslated_text = text.translate(var)\nprint(translated_text)",
        "options": [
            "<class 'str'> | de good",
            "<class 'dict'> | bo good",
            "<class 'str'> | be good",
            "<class 'list'> | be good",
            "<class 'dict'> | do good",
            "<class 'tuple'> | be good",
            "Nothing",
            "Error"
        ],
        "answer": "<class 'dict'> | do good"
    },
    {
        "id": 19,
        "question": "What will be the output of the following code?",
        "code": "text = '~~~Hello___World~~~'\ntext = text.removesuffix('~')\ntext = text.removeprefix('~')\ntext = text.strip('_')\nprint(text)",
        "options": [
            "Hello_ _ _World",
            "HelloWorld",
            "Hello_ _World",
            "~~HelloWorld~~",
            "~~Hello_ _ _World~~",
            "~Hello_ _World~",
            "Error",
            "Nothing"
        ],
        "answer": "~~Hello_ _ _World~~"
    },
    {
        "id": 20,
        "question": "What will be the output of the following code?",
        "code": "words = ['Python', 'C++', 'Java', 'JavaScript']\nfor i in range(0, len(words)) :\n\twords[i] =  words[i].swapcase()\nwords.sort(key=len, reverse=True,)\nprint(words)",
        "options": [
            "['javascript', 'python', 'java', 'c++']",
            "['c++', 'jAVA', 'pYTHON', 'jAVAsCRIPT']",
            "['C++', 'Java', 'Python', 'JavaScript']",
            "['jAVAsCRIPT', 'pYTHON', 'jAVA', 'c++']",
            "['JAVAsCRIPT', 'PYTHON', 'JAVA', 'C++']",
            "Syntax Error",
            "'str' object does not support item assignment",
            "Nothing"
        ],
        "answer": "['jAVAsCRIPT', 'pYTHON', 'jAVA', 'c++']"
    },
    {
        "id": 21,
        "question": "What will be the output of the following code?",
        "code": "ls = [123, 43, 5748, 4532, 43, 88]\nprint(sorted(set(ls), reverse=True))",
        "options": [
            "False",
            "True",
            "[5748, 4532, 123, 88, 43]",
            "[43, 88, 123, 4532, 5748]",
            "[43, 43, 88, 123, 4532, 5748]",
            "[5748, 4532, 123, 88, 43, 43]",
            "Nothing",
            "Error"
        ],
        "answer": "[5748, 4532, 123, 88, 43]"
    },
    {
        "id": 22,
        "question": "What will be the output of the following code?",
        "code": "words = ['Python', 'C++', 'Java', 'JavaScript', 'C#', 'Swift', 'Kotlin']\nprint(words[1::3], end = ' | ')\nprint(words[:-3:-1], end = ' | ')\nprint(words[-1:-5:-3])",
        "options": [
            "['Python', 'C++', 'Java] | ['C#', 'Swift', 'Kotlin'] | ['Kotlin', 'JavaScript']",
            "['C++', 'Java'] | ['Kotlin', 'Swift'] | ['Kotlin', 'JavaScript']",
            "['C++', 'C#'] | ['Kotlin', 'Swift'] | ['Kotlin', 'JavaScript']",
            "['C++', 'Java', 'JavaScript'] | ['Kotlin', 'Swift', 'C#'] | ['Kotlin', 'JavaScript']",
            "Index out of range.",
            "Nothing"
        ],
        "answer": "['C++', 'C#'] | ['Kotlin', 'Swift'] | ['Kotlin', 'JavaScript']"
    },
    {
        "id": 23,
        "question": "What will be the output of the following code?",
        "code": "di = {}\nprint(type(di), end=' | ')\ndi[1] = 1\ndi[2] = 2\ndi['1'] = 1\ndi[3] = 3\ndi['2'] = 1\ndi['2'] = 1\ndi[3] = 3\nprint(len(di))",
        "options": [
            "<class 'dict'> | 7",
            "<class 'set'> | 7",
            "<class 'dict'> | 6",
            "<class 'dict'> | 5",
            "<class 'set'> | 6",
            "<class 'set'> | 5",
            "<class 'set'> | 14",
            "<class 'set'> | 12",
            "<class 'dict'> | 14",
            "<class 'dict'> | 12",
            "Index out of range.",
            "dict indices must be integers or slices, not str.",
            "set indices must be integers or slices, not str.",
            "Nothing"
        ],
        "answer": "<class 'dict'> | 5"
    },
    {
        "id": 24,
        "question": "What will be the output of the following code?",
        "code": "x = int(bool())\ny = bool(int())\nprint(x, y, x + y, x * y)",
        "options": [
            "0 0 0 0",
            "False False False False",
            "False False 0 0",
            "0 0 False False",
            "0 0 False 0",
            "0 0 0 False",
            "0 False 0 0",
            "False 0 0 0",
            "Nothing",
            "Error"
        ],
        "answer": "0 False 0 0"
    },
    {
        "id": 25,
        "question":"What will be the output of the following code?",
        "code": "x = 123\nfor i in x:\n\tprint(i)",
        "options": [
            "1 2 3",
            "123",
            "'int' object is not iterable.",
            "123 times prints the number 123.",
            "None of the mentioned."
        ],
        "answer": "'int' object is not iterable."
    },
    {
        "id": 26,
        "question": "What will be the output of the following code?",
        "code": "di = {0: 'a', 1: 'b', 2: 'c'}\nfor i in di:\n\tprint(i, end=' ')",
        "options": [
            "0 1 2",
            "{0: 'a', 1: 'b', 2: 'c'}",
            "'a', 'b', 'c'",
            "Error",
            "Nothing"
        ],
        "answer": "0 1 2"
    },
    {
        "id": 27,
        "question": "What will be the output of the following code?",
        "code": "ls1 = [1, 2]\nls2 = [2]\ns1 = 'Hello'\ns2 = 'Hello'\ns3 = 'Hella'\nset1 = {1, 4, 2, 7, 8}\nset2 = {7, 1, 4, 2}\nx = {}\nprint(ls1 > ls2, s2 is s1, s2 < s3, set1 == set2, isinstance(x, set))",
        "options": [
            "True False False False True",
            "True True False False True",
            "True False True False True",
            "True False False True True",
            "False True False True False",
            "True True False False False",
            "True False False True False",
            "Nothing",
            "Error"
        ],
        "answer": "False True False True False"
    },
    {
        "id": 28,
        "question": "What will be the output of the following code?",
        "code": "di = {0: 'a', 1: 'b', 2: 'c'}\nfor x in di.keys():\n\tprint(di[x], end=' | ')\nprint()",
        "options": [
            "{0: 'a', 1: 'b', 2: 'c'} | {0: 'a', 1: 'b', 2: 'c'} | {0: 'a', 1: 'b', 2: 'c'} |",
            "0 | 1 | 2 |",
            "a | b | c |",
            "{0: 'a', 1: 'b', 2: 'c'} |",
            "KeyError",
            "Nothing"
        ],
        "answer": "a | b | c |"
    },
    {
        "id": 29, 
        "question": "What will be the output of the following code?",
        "code": "di = {0: 'a', 1: 'b', 2: 'c'}\nfor x in di.values():\n\tprint(di[x], end=' | ')\nprint()",
        "options": [
            "{0: 'a', 1: 'b', 2: 'c'} | {0: 'a', 1: 'b', 2: 'c'} | {0: 'a', 1: 'b', 2: 'c'} |",
            "0 | 1 | 2 |",
            "a | b | c |",
            "{0: 'a', 1: 'b', 2: 'c'} |",
            "KeyError",
            "Nothing"
        ],
        "answer": "KeyError"
    },
    {
        "id": 30,
        "question": "What will be the output of the following code?",
        "code": "di = {0, 1, 2}\nfor x in di.values():\n\tprint(x, end = ' | ')\nprint()",
        "options": [
            "0 | 1 | 2 |",
            "0 | 1 | 2 | 0 | 1 | 2 | 0 | 1 | 2 | # 3 times",
            "0 | 1 | 2 | 0 | 1 | 2 | 0 | 1 | 2 | 0 | 1 | 2 | # 4 times",
            "Error",
            "Nothing"
        ],
        "answer": "Error"
    },
    {
        "id": 31,
        "question": "What will be the output of the following code?",
        "code": "di = {0, 1, 2}\nfor x in di:\n\tprint(di.add(x), end = ' | ')\nprint()",
        "options": [
            "{0, 1, 2}",
            "{0, 1, 2, 0, 1, 2}",
            "None | None | None |",
            "{0, 1, 2, None, None, None}",
            "Error: Set changed size during iteration.",
            "Nothing"
        ],
        "answer": "None | None | None |"
    },
    {
        "id": 32,
        "question": "What will be the output of the following code?",
        "code": "for i in range(0):\n\tprint(i, end = ' | ')\na = 1; b = 2; print('res = ', a + b)",
        "options": [
            "0 | 1 | res = 3",
            "0 | res = 3",
            "res = 3",
            "Error",
            "Nothing"
        ],
        "answer": "res =  3"
    },
    {
        "id": 33,
        "question": "What will be the output of the following code?",
        "code": "x = 7\ny = 9\nx, y = y, x\na, b, c = 'Bye'\nprint(x, y, a, b, c)",
        "options": [
            "9 7 B y e",
            "7 9 B y e",
            "9 7 Bye Bye Bye",
            "7 9 Bye Bye Bye",
            "Error",
            "Nothing"
        ],
        "answer": "9 7 B y e"
    },
    {
        "id": 34,
        "question": "What will be the output of the following code?",
        "code": "tp = ((1, 2, 3), (4, 5, 6), (7, 8, 9))\nfor a, b, c in tp:\n\tprint(a, b, c,  end=' | ')",
        "options": [
            "1 2 3 | 4 5 6 | 7 8 9 |",
            "1 4 7 | 2 5 8 | 3 6 9 |",
            "Error: too many values to unpack.",
            "Error: not enough values to unpack.",
            "Nothing"
        ],
        "answer": "1 2 3 | 4 5 6 | 7 8 9 |"
    },
    {
        "id": 35,
        "question": "What will be the output of the following code?",
        "code": "ls = [['a', 'b'], 'c', 'd']\na, *b = ls\nx, y, z, p = range(4)\nprint(x, y, z, p, a, b)",
        "options": [
            "0 1 2 3 ['a'] [ 'b', 'c', 'd']",
            "0 1 2 3 ['a', 'b'] ['c', 'd']",
            "0 1 2 3 ['a', 'b', 'c'] ['d']",
            "0 1 2 3 ['a', 'b', 'c', 'd'] None",
            "range(0, 4) range(0, 4) range(0, 4) range(0, 4) ['a'] [ 'b', 'c', 'd']",
            "range(0, 4) range(0, 4) range(0, 4) range(0, 4) ['a', 'b'] ['c', 'd']",
            "range(0, 4) range(0, 4) range(0, 4) range(0, 4) ['a', 'b', 'c'] ['d']",
            "range(0, 4) range(0, 4) range(0, 4) range(0, 4) ['a', 'b', 'c', 'd'] None",
            "Error: too many values to unpack.",
            "Error: not enough values to unpack.",
            "Nothing"
        ],
        "answer": "0 1 2 3 ['a', 'b'] ['c', 'd']"
    },
    {
        "id": 36,
        "question": "What will be the output of the following code?",
        "code": "ls = [['a', 'b'], 'c', 'd']\na, *b, c = range(4) \n*x, y = ls\nprint(a, b, c, '|', x, y)",
        "options": [
            "[0, 1, 2] 3 | [['a', 'b'], 'c'] d",
            "0 [1, 2] 3 | [['a', 'b'], 'c'] d",
            "0 [1, 2, 3] None | [['a', 'b'], 'c'] d",
            "0 [1, 2, 3] None | [['a', 'b'], 'c', 'd'] None",
            "range(0, 4) range(0, 4) range(0, 4) | [['a', 'b'], 'c'] d",
            "range(0, 4) range(0, 4) range(0, 4) | [['a', 'b', 'c'] d",
            "range(0, 4) range(0, 4) range(0, 4) | [['a', 'b'], 'c', 'd'] None",
            "Error: too many values to unpack.",
            "Error: not enough values to unpack.",
            "Nothing"
        ],
        "answer": "0 [1, 2] 3 | [['a', 'b'], 'c'] d"
    },
    {
        "id": 37,
        "question": "What will be the output of the following code?",
        "code": "a = b = []\nb.append(42) \nprint(a, b, end=' | ')\nls = [1, 2] \nls1 = ls\nls = ls + [3] \nls.append(4)\nprint(ls, ls1)",
        "options": [
            "[42] [42] | [1, 2, 3, 4] [1, 2, 3, 4]",
            "[42, 42] | [1, 2, 3, 4] [1, 2, 3, 4]",
            "None 42 | [1, 2, 3, 4] [1, 2, 3, 4]",
            "None 42 | [1, 2, 3, 4] [1, 2]",
            "[42, 42] | [1, 2, 3, 4] [1, 2]",
            "[42] [42] | [1, 2, 3, 4] [1, 2]"
        ],
        "answer": "[42] [42] | [1, 2, 3, 4] [1, 2]"
    },
    {
        "id": 38,
        "question": "What will be the output of the following code?",
        "code": "ls = ['Hi', 7, 8]\nls1 = ls\nls1.append(9) \nls1 = ls1 + 'Bye'\nprint(ls, ls1)",
        "options": [
            "['Hi', 7, 8] ['Hi', 7, 8, 9, 'Bye']",
            "['Hi', 7, 8, 9] ['Hi', 7, 8, 9, 'Bye']",
            "['Hi', 7, 8, 9, 'Bye'] ['Hi', 7, 8, 9, 'Bye']",
            "Error",
            "Nothing"
        ],
        "answer": "Error"
    },
    {
        "id": 39,
        "question": "What will be the output of the following code?",
        "code": "ls = [1, 2, 3]\nls1 = [4, 5]\nls = ls + ls1 + [6, 7] + ['Hi']\nls2 = LS \nprint(ls2)",
        "options": [
            "[1, 2, 3, 4, 5, 6, 7, 'Hi']",
            "[4, 5, 6, 7, 'Hi']",
            "[1, 2, 3]",
            "Error",
            "Nothing"
        ],
        "answer": "Error"
    },
    {
        "id": 40,
        "question": "What will be the output of the following code?",
        "code": "ls = [1, 2, 3]\nls = ls.append(4)\nls1 = [4, 5]\nls = ls + ls1 + ls[1:]\nprint(ls)",
        "options": [
            "[1, 2, 3, 4, 5, 2, 3,]",
            "[1, 2, 3, 4, 5, 2, 3, 4]",
            "[1, 2, 3, 4, 4, 5, 2, 3, 4]",
            "[1, 2, 3, 4, 5, 1, 2, 3, 4]",
            "[1, 2, 3, 4, 4, 5, 1, 2, 3, 4]",
            "Error",
            "Nothing"
        ],
        "answer": "Error"
    },
    {
        "id": 41,
        "question": "What will be the output of the following code?",
        "code": "import sys\ntemp = sys.stdout\nsys.stdout = open('log.txt', 'a') \nprint('spam', end=', ')\nprint(1, 2, 3, sep='')\nsys.stdout.close() \nsys.stdout = temp\nprint('back here', end=' | ', sep='_')\nprint(open('log.txt').read())",
        "options": [
            "spam, 1 2 3 | back here",
            "back here | spam, 1 2 3",
            "spam, 123 | back here",
            "back_here | spam, 123",
            "back here | spam, 123",
            "spam, 1 2 3 | back_here",
            "back_here | spam, 1 2 3",
            "spam, 123 | back_here",
            "Error",
            "Nothing"
        ],
        "answer": "back here | spam, 123"
    },
    {
        "id": 42,
        "question": "What will be the output of the following code?",
        "code": "x = 'Python'\nwhile x:\n\tprint(x, end=' ')\n\tx = x[1:]\nres = ['Version 1', 'Version 2'][bool(x)]\nprint(res)",
        "options": [
            "Python Python Python Python Python Python Version 2",
            "Python Python Python Python Python Python Version 1",
            "ython ython ython ython ython ython Version 2",
            "ython ython ython ython ython ython Version 1",
            "Python ython thon hon on n Version 2",
            "Python ython thon hon on n Version 1",
            "Error",
            "Nothing"
        ],
        "answer": "Python ython thon hon on n Version 1"
    },
    {
        "id": 43,
        "question": "What will be the output of the following code?",
        "code": "di = {'a': 1, 'b': 2, 'c': 3}\nfor x, y in di.items():\n\tprint(x, y, sep=' - ', end=' | ')",
        "options": [
            "Error",
            "a - 1 | b - 2 | c - 3 |",
            "a - b | c - None | None- None |",
            "a - None | b - None | c - None |",
            "Nothing"
        ],
        "answer": "a - 1 | b - 2 | c - 3 |"
    },
    {
        "id": 44,
        "question": "What will be the output of the following code?",
        "code": "ls1 = [1,2,3]\nls2 = [5,6,7]\nfor (x, y) in zip(ls1, ls2): print(x, y, '-', x+y, end=' | ')",
        "options": [
            "1 2 - 3 | 3 5 - 8 | 6 7 - 13 | 7 None - None",
            "15 51 - 66 | 26 62 - 88 | 37 73 - 110 |",
            "1 5 - 6 | 2 6 - 8 | 3 7 - 10 |",
            "6 | 8 | 10",
            "Nothing",
            "Error"
        ],
        "answer": "1 5 - 6 | 2 6 - 8 | 3 7 - 10 |"
    },
    {
        "id": 45,
        "question": "What will be the output of the following code?",
        "code": "def foo(x):\n\treturn x + str(chr(ord(x) + 1))\nst1 = 'abc'\nst2 = 'xyz123'\nprint(list(zip(st1, st2)), end=' | ')\nprint(list(map(foo, st1)))",
        "options": [
            "[('a', 'b'), ('c', 'x'), ('y', 'z')] | ['b', 'c', 'd']",
            "[('a', 'x'), ('b', 'y'), ('c', 'z')] | ['b', 'c', 'd']",
            "[('a', 'x'), ('b', 'y'), ('c', 'z')] | ['ab', 'bc', 'cd']",
            "[('a', 'b'), ('c', 'x'), ('y', 'z')] | ['ab', 'bc', 'cd']",
            "[('a', 'b'), ('c', 'x'), ('y', 'z'), (None, '1'), (None, '2'), (None, '3')] | ['b', 'c', 'd']",
            "[('a', 'x'), ('b', 'y'), ('c', 'z'), (None, '1'), (None, '2'), (None, '3')] | ['b', 'c', 'd']",
            "[('a', 'b'), ('c', 'x'), ('y', 'z'), (None, '1'), (None, '2'), (None, '3')] | ['ab', 'bc', 'cd']",
            "[('a', 'x'), ('b', 'y'), ('c', 'z'), (None, '1'), (None, '2'), (None, '3')] | ['ab', 'bc', 'cd']",
            "Error",
            "Nothing"
        ],
        "answer": "[('a', 'x'), ('b', 'y'), ('c', 'z')] | ['ab', 'bc', 'cd']"
    },
    {
        "id": 46,
        "question": "What will be the output of the following code?",
        "code": "ls = ['Python', 'C++', 'Java', 'JavaScript']\nx = ord(ls[2][1:5:7])\nres = list(enumerate(ls, x))\nprint(res)",
        "options": [
            "[(97, 'Python'), (97, 'C++'), (97, 'Java'), (97, 'JavaScript')]",
            "[(74, 'Python'), (74, 'C++'), (74, 'Java'), (74, 'JavaScript')]",
            "[(0, 'Python'), (0, 'C++'), (0, 'Java'), (0, 'JavaScript')]",
            "[(1, 'Python'), (1, 'C++'), (1, 'Java'), (1, 'JavaScript')]",
            "[(97, 'Python'), (98, 'C++'), (99, 'Java'), (100, 'JavaScript')]",
            "[(0, 'Python'), (1, 'C++'), (2, 'Java'), (3, 'JavaScript')]",
            "[(118, 'Python'), (118, 'C++'), (118, 'Java'), (118, 'JavaScript')]",
            "[(1, 'Python'), (2, 'C++'), (3, 'Java'), (4, 'JavaScript')]",
            "Error",
            "Nothing"
        ],
        "answer": "[(97, 'Python'), (98, 'C++'), (99, 'Java'), (100, 'JavaScript')]"      
    }
]

